services:
  syslogng:
    build:
      context: .
      dockerfile: Dockerfile-syslogng
    image: syslogng-mysql:latest   
    ports:
      - "${SYSLOG_UDP_PORT}:514/udp"
      - "${SYSLOG_TCP_PORT}:514"
    environment:
      LOGROTATE_CRON: ${LOGROTATE_CRON}
      LOGROTATE_SIZE: ${LOGROTATE_SIZE}
      LOGROTATE_MAX_AGE_DAYS: ${LOGROTATE_MAX_AGE_DAYS}
      LOGROTATE_ROTATIONS: ${LOGROTATE_ROTATIONS}    
      TZ: ${TZ}
    volumes:
      - ./data/syslog-ng/config:/etc/syslog-ng/conf.d/
      - ./data/syslog-ng/log/:/var/log/
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped

  loganalyzer:
    build:
      context: .
      dockerfile: Dockerfile-loganalyzer
      args:
        LOGANALYZER_VERSION: ${LOGANALYZER_VERSION}
    image: loganalyzer:${LOGANALYZER_VERSION}
    environment:
      - TZ=${TZ}
    healthcheck:  
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 3s
      retries: 5      
    ports:
      - "${LOGANALYZER_PORT}:80"
    volumes:
      - ./data/loganalyzer/config/config.php:/var/www/html/config.php
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped

  database:
    image: mariadb:latest
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - TZ=${TZ}
    healthcheck:
      test: ["CMD-SHELL", "mariadb -u root -p$${MARIADB_ROOT_PASSWORD} -e 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - dbdata:/var/lib/mysql
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql

  dbcleanup:
    build:
      context: .
      dockerfile: Dockerfile-dbcleanup
    image: dbcleanup:latest
    depends_on:
      - database
    environment:
      DB_HOST: database
      DB_NAME: syslogdb
      DB_USER: syslog
      DB_PASSWORD: syslogpass
      LOG_RETENTION_DAYS: ${LOG_RETENTION_DAYS}
      DBCLEANUP_CRON: ${DBCLEANUP_CRON}
      TZ: ${TZ}

volumes:
  dbdata: