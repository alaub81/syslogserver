name: Release (build & push)

on:
  push:
    branches: [main]
    tags: ['v*.*.*']  # SemVer-Tags pushen ebenfalls
  schedule:
    - cron: '17 01 * * 2'   # weekly rebuild (Mon 03:17 UTC)

permissions:
  contents: read
  packages: write   # GHCR Push
  id-token: write

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - name: loganalyzer
            dockerfile: Dockerfile-loganalyzer
            context: .
          - name: syslogng
            dockerfile: Dockerfile-syslogng
            context: .
          - name: dbcleanup
            dockerfile: Dockerfile-dbcleanup
            context: .
    steps:
      - uses: actions/checkout@v5

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Optional: Docker Hub Login (falls gew√ºnscht)
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (Tags je nach branch/tag)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image.name }}
            # docker.io/<yourhub>/${{ matrix.image.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          platforms: linux/amd64,linux/arm64
          pull: true
          no-cache: ${{ github.event_name == 'schedule' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
