#@version: 3.38

options {
  flush_lines(1);
  time_reopen(10);
  log_fifo_size(1000);
  chain_hostnames(no);
  use_dns(yes);
  use_fqdn(no);
  create_dirs(yes);
  keep_hostname(yes);
  #ts-format(iso);
};

# for debugging
destination d_shelly {
  file("/var/log/shelly" template("LEVEL=${SLEVEL:-not_set} PID=${PID:-not_set} SPROG=${PROGRAM:-not_set} MSG=${MESSAGE:-not_set}\n"));
};
destination d_rawudp {
  file("/var/log/raw-udp.log");
};

# Syslogserver Ports
source s_tcp {
  syslog(transport(tcp) port(514));
};
source s_udp {
  syslog(transport(udp) port(514));
};

# Shelly Device Filters
filter f_is_not_shelly {
  not match("shelly" value("MSGHDR"));
};
filter f_is_shelly {
  match("shelly" value("MSGHDR"));
};

# Shelly LEVEL Parser
parser p_shelly_level {
  regexp-parser(
    type("pcre")
    patterns(".* (?<SLEVEL>[0-4])\\|.*")
  );
};

# Shelly PID Parser
parser p_shelly_pid {
  regexp-parser(
    type("pcre")
    patterns("\\|[^:]+:(?<PID>[0-9]+)")
  );
};

# Shelly PROG Parser
parser p_shelly_program {
  regexp-parser(
    type("pcre")
    patterns("\\|(?<PROGRAM>[^:]+):[0-9]+")
  );
};

# Shelly Message Parser
parser p_shelly_message {
  regexp-parser(
    type("pcre")
    patterns("\\|[^:]+:[0-9]+\\s+(?<MESSAGE>.+)")
  );
};

# Database Connection
destination d_mysql {
    sql(type(mysql)
        host("database")
        port("3306")
        username("`DB_USER`")
        password("`DB_PASSWORD`")
        database("`DB_NAME`")
        table("SystemEvents")
        columns("ReceivedAt", "DeviceReportedTime", "Facility", "Priority",
                "FromHost", "Message", "SysLogTag", "ProcessID", "Importance")
        values("${YEAR}-${MONTH}-${DAY} ${HOUR}:${MIN}:${SEC}",
               "${YEAR}-${MONTH}-${DAY} ${HOUR}:${MIN}:${SEC}",
               "${FACILITY_NUM}",
               "$(if ('${SLEVEL}' == '') '${LEVEL_NUM}' \
                  $(if ('${SLEVEL}' == '0') '3' \
                  $(if ('${SLEVEL}' == '1') '4' \
                  $(if ('${SLEVEL}' == '2') '6' \
                  $(if ('${SLEVEL}' == '3') '7' '7')))))",
               "${HOST}", "${MSGONLY}", "${PROGRAM}", "${PID:-0}", "0")
        indexes("ReceivedAt", "FromHost")
    );
};

# Logging for none Shelly devices
log {
  source(s_udp);
  source(s_tcp);
  source(s_src);
  filter(f_is_not_shelly);
  destination(d_mysql);
};

# Shelly Device Logging
log {
  source(s_udp);
  source(s_tcp);
  filter(f_is_shelly);
  parser(p_shelly_pid);  
  parser(p_shelly_level);
  parser(p_shelly_program);
  parser(p_shelly_message);
  destination(d_mysql);
  # own shelly log for debugging
  destination(d_shelly);
};

# Rawdump for debugging
log {
  source(s_udp);
  destination(d_rawudp);
};